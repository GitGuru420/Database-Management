CREATE DATABASE MODULE_9_BOOK;
USE MODULE_9_BOOK;

-- PRIMARY KEY
CREATE TABLE STUDENTS (
	StudentID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Age INT
);

-- FOREIGN KEY
CREATE TABLE GRADES (
	GradeID INT PRIMARY KEY,
    StdID INT,
    Course VARCHAR(50),
    Grade CHAR(1),
    FOREIGN KEY(StdID) REFERENCES STUDENTS(StudentID)
);


-- FOREIGN KEY ON DELETE OPERATION
CREATE TABLE STUDENT (
	Student_No INT PRIMARY KEY,
    Name VARCHAR(20)
);

CREATE TABLE COURSE (
	Course_No VARCHAR(10) PRIMARY KEY,
    Course_Name VARCHAR(20)
);

-- If we want that record is deleted with row.
CREATE TABLE ENROLLMENT (
	Student_No INT,
    Course_No VARCHAR(10),
    Enroll_Id INT PRIMARY KEY,
    Enrollment_Date DATE,
    FOREIGN KEY(Student_No) REFERENCES STUDENT(Student_No) ON DELETE CASCADE,
    FOREIGN KEY(Course_No) REFERENCES COURSE(Course_No) ON DELETE CASCADE
);

-- OR, If we want that record is deleted but set null to the row.
CREATE TABLE ENROLLMENT (
	Student_No INT,
    Course_No VARCHAR(10),
    Enroll_Id INT PRIMARY KEY,
    Enrollment_Date DATE,
    FOREIGN KEY(Student_No) REFERENCES STUDENT(Student_No) ON DELETE SET NULL,
    FOREIGN KEY(Course_No) REFERENCES COURSE(Course_No) ON DELETE SET NULL
);


-- SET OPERATION: 1) UNION	2) UNION ALL	3) INTERSECT	4) MINUS(or, EXCEPT)      
USE DUMMYDB;
-- UNION
SELECT * FROM EMPLOYEES
WHERE SALARY > 10000
UNION
SELECT * FROM EMPLOYEES
WHERE MANAGER_ID = 100;

-- UNION ALL
SELECT * FROM EMPLOYEES
WHERE SALARY > 10000
UNION ALL
SELECT * FROM EMPLOYEES
WHERE MANAGER_ID = 100;

-- INTERSECT
SELECT * FROM EMPLOYEES
WHERE SALARY > 10000
INTERSECT
SELECT * FROM EMPLOYEES
WHERE MANAGER_ID = 100;

--  MINUS(or, EXCEPT)
SELECT * FROM EMPLOYEES
WHERE SALARY > 10000
EXCEPT
SELECT * FROM EMPLOYEES
WHERE MANAGER_ID = 100;